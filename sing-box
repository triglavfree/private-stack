#!/bin/bash
set -e
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'
if [[ $EUID -ne 0 ]]; then
   echo -e "${RED}–ó–∞–ø—É—Å—Ç–∏—Ç–µ –æ—Ç root.${NC}"
   exit 1
fi
create_swap_if_needed() {
    TOTAL_MEM_KB=$(grep MemTotal /proc/meminfo | awk '{print $2}')
    TOTAL_MEM_GB=$((TOTAL_MEM_KB / 1024 / 1024))
    if [ "$TOTAL_MEM_GB" -le 1 ]; then
        if ! swapon --show | grep -q '/swapfile'; then
            echo -e "${GREEN}–°–æ–∑–¥–∞–Ω–∏–µ swap-—Ñ–∞–π–ª–∞ 2 –ì–ë (RAM ‚â§ 1 –ì–ë)...${NC}"
            fallocate -l 2G /swapfile || dd if=/dev/zero of=/swapfile bs=1M count=2048
            chmod 600 /swapfile
            mkswap /swapfile
            swapon /swapfile
            echo '/swapfile none swap sw 0 0' >> /etc/fstab
            echo 'vm.swappiness=10' >> /etc/sysctl.conf
            echo 'vm.vfs_cache_pressure=50' >> /etc/sysctl.conf
            sysctl -p >/dev/null 2>&1
            echo -e "${GREEN}Swap —Å–æ–∑–¥–∞–Ω.${NC}"
        fi
    fi
}
create_swap_if_needed
echo -e "${GREEN}–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã...${NC}"
apt update && apt upgrade -y
apt install -y curl wget gnupg net-tools qrencode jq uuid-runtime
# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ ufw + fail2ban
echo -e "${GREEN}–ù–∞—Å—Ç—Ä–æ–π–∫–∞ ufw –∏ fail2ban...${NC}"
apt install -y ufw fail2ban
ufw allow 443/tcp
ufw --force enable
systemctl enable --now fail2ban
# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ sing-box
echo -e "${GREEN}–£—Å—Ç–∞–Ω–æ–≤–∫–∞ sing-box...${NC}"
LATEST=$(curl -s https://api.github.com/repos/SagerNet/sing-box/releases/latest | jq -r ".tag_name")
ARCH=$(dpkg --print-architecture)
case "$ARCH" in
  amd64) SUFFIX="linux-amd64" ;;
  arm64) SUFFIX="linux-arm64" ;;
  *) echo -e "${RED}–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ $ARCH –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è.${NC}"; exit 1 ;;
esac
URL="https://github.com/SagerNet/sing-box/releases/download/${LATEST}/sing-box-${LATEST#v}-${SUFFIX}.tar.gz"
curl -L "$URL" | tar xz -C /tmp
mv "/tmp/sing-box-${LATEST#v}-${SUFFIX}/sing-box" /usr/local/bin/sing-box
rm -rf "/tmp/sing-box-${LATEST#v}-${SUFFIX}"
chmod +x /usr/local/bin/sing-box
# –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
if ! command -v sing-box &> /dev/null; then
    echo -e "${RED}–û—à–∏–±–∫–∞: sing-box –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.${NC}"
    exit 1
fi
# systemd
cat > /etc/systemd/system/sing-box.service <<'EOF'
[Unit]
Description=sing-box service
After=network.target
[Service]
ExecStart=/usr/local/bin/sing-box run -c /usr/local/etc/sing-box/config.json
Restart=on-failure
RestartSec=5
User=root
[Install]
WantedBy=multi-user.target
EOF
IP=$(curl -4 -s icanhazip.com)
UUID=$(uuidgen)
# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª—é—á–µ–π –û–î–ò–ù —Ä–∞–∑
KEYPAIR=$(sing-box x25519)
REALITY_PRIV_KEY=$(echo "$KEYPAIR" | awk '/^private key:/ {print $3}')
REALITY_PUB_KEY=$(echo "$KEYPAIR" | awk '/^public key:/ {print $3}')
SHORT_ID=$(openssl rand -hex 4)
mkdir -p /usr/local/etc/sing-box
cat > /usr/local/etc/sing-box/.keys <<EOF
uuid: $UUID
private key: $REALITY_PRIV_KEY
public key: $REALITY_PUB_KEY
shortsid: $SHORT_ID
EOF
# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å DoH Cloudflare –∏ –º–∞—Å–∫–∏—Ä–æ–≤–∫–æ–π –ø–æ–¥ www.cloudflare.com
cat > /usr/local/etc/sing-box/config.json <<EOF
{
  "log": {
    "level": "warn"
  },
  "dns": {
    "servers": [
      {
        "tag": "cloudflare",
        "address": "https://1.1.1.1/dns-query"
      }
    ]
  },
  "inbounds": [
    {
      "type": "vless",
      "listen": "::",
      "listen_port": 443,
      "users": [
        {
          "uuid": "$UUID",
          "flow": "xtls-rprx-vision"
        }
      ],
      "tls": {
        "enabled": true,
        "server_name": "www.cloudflare.com",
        "reality": {
          "enabled": true,
          "private_key": "$REALITY_PRIV_KEY",
          "short_ids": ["$SHORT_ID"]
        }
      },
      "transport": {
        "type": "tcp"
      }
    }
  ],
  "outbounds": [
    {
      "type": "direct",
      "tag": "direct",
      "domain_strategy": "prefer_ipv4"
    },
    {
      "type": "dns",
      "tag": "dns-out"
    }
  ],
  "route": {
    "rules": [
      {
        "protocol": "dns",
        "outbound": "dns-out"
      }
    ],
    "final": "direct"
  }
}
EOF
systemctl daemon-reload
systemctl enable --now sing-box
# –£—Ç–∏–ª–∏—Ç—ã
cat > /usr/local/bin/listuser <<'EOF'
#!/bin/bash
uuids=($(jq -r '.inbounds[0].users[].uuid' "/usr/local/etc/sing-box/config.json"))
if [[ ${#uuids[@]} -eq 0 ]]; then
    echo "–°–ø–∏—Å–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤ –ø—É—Å—Ç"
    exit 1
fi
echo "–ö–ª–∏–µ–Ω—Ç—ã (–ø–æ UUID):"
for i in "${!uuids[@]}"; do
    echo "$((i+1)). ${uuids[$i]}"
done
EOF
chmod +x /usr/local/bin/listuser
cat > /usr/local/bin/mainuser <<'EOF'
#!/bin/bash
uuid=$(awk -F': ' '/uuid/ {print $2}' /usr/local/etc/sing-box/.keys)
pbk=$(awk -F': ' '/public key/ {print $2}' /usr/local/etc/sing-box/.keys)
sid=$(awk -F': ' '/shortsid/ {print $2}' /usr/local/etc/sing-box/.keys)
ip=$(timeout 3 curl -4 -s icanhazip.com)
link="vless://$uuid@$ip:443?security=reality&sni=www.cloudflare.com&fp=firefox&pbk=$pbk&sid=$sid&spx=/&type=tcp&flow=xtls-rprx-vision&encryption=none#vless-$ip"
echo ""
echo "–°—Å—ã–ª–∫–∞ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:"
echo "$link"
echo ""
echo "QR-–∫–æ–¥:"
echo "$link" | qrencode -t ansiutf8
EOF
chmod +x /usr/local/bin/mainuser
cat > /usr/local/bin/adduser <<'EOF'
#!/bin/bash
read -p "Email (–¥–ª—è –º–µ—Ç–∫–∏): " email
if [[ -z "$email" ]]; then echo "Email –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º"; exit 1; fi
if jq -e --arg e "$email" '.inbounds[0].users[] | select(.email == $e)' /usr/local/etc/sing-box/config.json >/dev/null 2>&1; then
    echo "–£–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    exit 1
fi
uuid=$(uuidgen)
jq --arg e "$email" --arg u "$uuid" '.inbounds[0].users += [{"uuid": $u, "flow": "xtls-rprx-vision", "email": $e}]' /usr/local/etc/sing-box/config.json > /tmp/x.json && mv /tmp/x.json /usr/local/etc/sing-box/config.json
systemctl restart sing-box
pbk=$(awk -F': ' '/public key/ {print $2}' /usr/local/etc/sing-box/.keys)
sid=$(awk -F': ' '/shortsid/ {print $2}' /usr/local/etc/sing-box/.keys)
ip=$(curl -4 -s icanhazip.com)
link="vless://$uuid@$ip:443?security=reality&sni=www.cloudflare.com&fp=firefox&pbk=$pbk&sid=$sid&spx=/&type=tcp&flow=xtls-rprx-vision&encryption=none#$email"
echo
echo "–°—Å—ã–ª–∫–∞:"
echo "$link"
echo
echo "QR:"
echo "$link" | qrencode -t ansiutf8
EOF
chmod +x /usr/local/bin/adduser
cat > /usr/local/bin/rmuser <<'EOF'
#!/bin/bash
emails=($(jq -r '.inbounds[0].users[].email // "–±–µ–∑ email"' "/usr/local/etc/sing-box/config.json"))
if [[ ${#emails[@]} -eq 0 ]]; then echo "–ù–µ—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤"; exit 1; fi
for i in "${!emails[@]}"; do echo "$((i+1)). ${emails[$i]}"; done
read -p "–ù–æ–º–µ—Ä –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: " n
if ! [[ "$n" =~ ^[0-9]+$ ]] || (( n < 1 || n > ${#emails[@]} )); then echo "–û—à–∏–±–∫–∞"; exit 1; fi
jq --argjson idx $((n-1)) '(.inbounds[0].users) |= del(.[\$idx])' /usr/local/etc/sing-box/config.json > /tmp/x.json && mv /tmp/x.json /usr/local/etc/sing-box/config.json
systemctl restart sing-box
echo "–ö–ª–∏–µ–Ω—Ç —É–¥–∞–ª—ë–Ω."
EOF
chmod +x /usr/local/bin/rmuser
cat > /usr/local/bin/sharelink <<'EOF'
#!/bin/bash
emails=($(jq -r '.inbounds[0].users[].email // "–±–µ–∑ email"' "/usr/local/etc/sing-box/config.json"))
if [[ ${#emails[@]} -eq 0 ]]; then echo "–ù–µ—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤"; exit 1; fi
for i in "${!emails[@]}"; do echo "$((i+1)). ${emails[$i]}"; done
read -p "–í—ã–±–æ—Ä: " n
if ! [[ "$n" =~ ^[0-9]+$ ]] || (( n < 1 || n > ${#emails[@]} )); then echo "–û—à–∏–±–∫–∞"; exit 1; fi
index=$((n-1))
uuid=$(jq -r ".inbounds[0].users[$index].uuid" /usr/local/etc/sing-box/config.json)
pbk=$(awk -F': ' '/public key/ {print $2}' /usr/local/etc/sing-box/.keys)
sid=$(awk -F': ' '/shortsid/ {print $2}' /usr/local/etc/sing-box/.keys)
ip=$(curl -4 -s icanhazip.com)
link="vless://$uuid@$ip:443?security=reality&sni=www.cloudflare.com&fp=firefox&pbk=$pbk&sid=$sid&spx=/&type=tcp&flow=xtls-rprx-vision&encryption=none#user-$n"
echo
echo "–°—Å—ã–ª–∫–∞:"
echo "$link"
echo
echo "QR:"
echo "$link" | qrencode -t ansiutf8
EOF
chmod +x /usr/local/bin/sharelink
cat > /usr/local/bin/update <<'EOF'
#!/bin/bash
echo "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ sing-box..."
LATEST=$(curl -s https://api.github.com/repos/SagerNet/sing-box/releases/latest | jq -r ".tag_name")
ARCH=$(dpkg --print-architecture)
case "$ARCH" in
  amd64) SUFFIX="linux-amd64" ;;
  arm64) SUFFIX="linux-arm64" ;;
  *) echo "–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è"; exit 1 ;;
esac
URL="https://github.com/SagerNet/sing-box/releases/download/${LATEST}/sing-box-${LATEST#v}-${SUFFIX}.tar.gz"
curl -L "$URL" | tar xz -C /tmp
mv "/tmp/sing-box-${LATEST#v}-${SUFFIX}/sing-box" /usr/local/bin/sing-box
rm -rf "/tmp/sing-box-${LATEST#v}-${SUFFIX}"
chmod +x /usr/local/bin/sing-box
systemctl restart sing-box
echo "–ì–æ—Ç–æ–≤–æ."
EOF
chmod +x /usr/local/bin/update
# –ö–æ–º–∞–Ω–¥–∞ openssh
cat > /usr/local/bin/openssh <<'EOF'
#!/bin/bash
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'
echo -e "${YELLOW}üîí –ü–æ—Ä—Ç 22 –∑–∞–∫—Ä—ã—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.${NC}"
echo
echo -e "${YELLOW}‚ö†Ô∏è  –í–ê–ñ–ù–û: –Ω—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –∏–º–µ–Ω–Ω–æ –≤–∞—à –í–ù–ï–®–ù–ò–ô (–ø—É–±–ª–∏—á–Ω—ã–π) IPv4-–∞–¥—Ä–µ—Å!${NC}"
echo -e "   –≠—Ç–æ –ù–ï –∞–¥—Ä–µ—Å –≤–∏–¥–∞ 192.168.x.x, 10.x.x.x –∏–ª–∏ IP –≤–∞—à–µ–≥–æ VPS."
echo
echo -e "   –£–∑–Ω–∞–π—Ç–µ —Å–≤–æ–π –≤–Ω–µ—à–Ω–∏–π IP –Ω–∞ –æ–¥–Ω–æ–º –∏–∑ —Å–∞–π—Ç–æ–≤:"
echo -e "     ‚Ä¢ https://myip.ru/"
echo -e "     ‚Ä¢ https://2ip.ru/"
echo -e "     ‚Ä¢ https://www.dnsleaktest.com/"
echo
read -p "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–Ω–µ—à–Ω–∏–π IP-–∞–¥—Ä–µ—Å: " USER_IP
# –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ IPv4
if [[ ! "$USER_IP" =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
    echo -e "${RED}‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç IP-–∞–¥—Ä–µ—Å–∞.${NC}"
    exit 1
fi
# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞: –∫–∞–∂–¥–∞—è —á–∞—Å—Ç—å ‚â§ 255
IFS='.' read -r a b c d <<< "$USER_IP"
if (( a > 255 || b > 255 || c > 255 || d > 255 )); then
    echo -e "${RED}‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π IP-–∞–¥—Ä–µ—Å (—á–∏—Å–ª–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å ‚â§ 255).${NC}"
    exit 1
fi
# –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ, –µ—Å–ª–∏ IP –ø–æ—Ö–æ–∂ –Ω–∞ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π
if [[ "$USER_IP" =~ ^(192\.168|10\.|172\.(1[6-9]|2[0-9]|3[01])) ]]; then
    echo -e "${RED}‚ö†Ô∏è  –í–Ω–∏–º–∞–Ω–∏–µ: –≤—ã –≤–≤–µ–ª–∏ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π (–≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π) IP-–∞–¥—Ä–µ—Å!${NC}"
    echo -e "${RED}   –¢–∞–∫–æ–π –∞–¥—Ä–µ—Å –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–Ω–µ—à–Ω–∏–π IP —Å myip.ru.${NC}"
    exit 1
fi
# –ü—Ä–æ–≤–µ—Ä–∏–º, –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ –ª–∏ —É–∂–µ —ç—Ç–æ –ø—Ä–∞–≤–∏–ª–æ
if ufw status | grep -q "ALLOW IN.*$USER_IP.*22"; then
    echo -e "${GREEN}‚úÖ –ü—Ä–∞–≤–∏–ª–æ –¥–ª—è $USER_IP —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.${NC}"
else
    echo -e "${GREEN}–û—Ç–∫—Ä—ã–≤–∞–µ–º SSH –¥–ª—è $USER_IP...${NC}"
    ufw allow from "$USER_IP" to any port 22
    echo -e "${GREEN}‚úÖ –î–æ—Å—Ç—É–ø –ø–æ SSH —Ä–∞–∑—Ä–µ—à—ë–Ω —Å $USER_IP.${NC}"
fi
EOF
chmod +x /usr/local/bin/openssh
# –§–∞–π–ª help
cat > $HOME/help <<'EOF'
–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
  mainuser    ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —Å—Å—ã–ª–∫—É –∏ QR –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  listuser    ‚Äî —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤
  adduser     ‚Äî —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  rmuser      ‚Äî —É–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  sharelink   ‚Äî –ø–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É –ø–æ –Ω–æ–º–µ—Ä—É
  update      ‚Äî –æ–±–Ω–æ–≤–∏—Ç—å —è–¥—Ä–æ
  openssh     ‚Äî —Ä–∞–∑—Ä–µ—à–∏—Ç—å SSH —Å –≤–∞—à–µ–≥–æ –≤–Ω–µ—à–Ω–µ–≥–æ IP
EOF
# –§–∏–Ω–∞–ª—å–Ω—ã–π –≤—ã–≤–æ–¥
clear
echo
echo -e "${GREEN}‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ sing-box (REALITY + Vision) –∑–∞–≤–µ—Ä—à–µ–Ω–∞!${NC}"
echo
# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Å—ã–ª–∫–∏ –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
UUID=$(awk -F': ' '/uuid/ {print $2}' /usr/local/etc/sing-box/.keys)
PBK=$(awk -F': ' '/public key/ {print $2}' /usr/local/etc/sing-box/.keys)
SID=$(awk -F': ' '/shortsid/ {print $2}' /usr/local/etc/sing-box/.keys)
IP=$(curl -4 -s icanhazip.com)
if [[ -z "$IP" ]]; then
    echo -e "${RED}‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å IP –¥–ª—è —Å—Å—ã–ª–∫–∏.${NC}"
else
    LINK="vless://$UUID@$IP:443?security=reality&sni=www.cloudflare.com&fp=firefox&pbk=$PBK&sid=$SID&spx=/&type=tcp&flow=xtls-rprx-vision&encryption=none#main"
    echo "–°—Å—ã–ª–∫–∞ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:"
    echo
    echo "$LINK"
    echo
    echo "QR-–∫–æ–¥:"
    echo "$LINK" | qrencode -t ansiutf8
fi
echo
echo -e "${YELLOW}‚ö†Ô∏è –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:${NC}"
echo -e "${GREEN}       cat help${NC}"
echo -e "${YELLOW}üîí –ü–æ—Ä—Ç 22 (SSH) –∑–∞–∫—Ä—ã—Ç —Ñ–∞–µ—Ä–≤–æ–ª–æ–º. –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:${NC}"
echo -e "${GREEN}       openssh${NC}"
echo -e "${YELLOW}   –∏ —É–∫–∞–∂–∏—Ç–µ –≤–∞—à –≤–Ω–µ—à–Ω–∏–π IP (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å myip.ru).${NC}"
echo -e "${YELLOW}üí° –í–∫–ª—é—á–∏—Ç–µ ¬´Use Remote DNS¬ª –≤ –∫–ª–∏–µ–Ω—Ç–µ (Hiddify) –∏ —Ä–µ–∂–∏–º VPN!${NC}"
