#!/bin/bash
# install-private-stack-reality.sh
# Xray (REALITY + Vision) + SearXNG + Nginx (fallback) + LE (для веба)
# Без Docker, под 1 ГБ RAM, Ubuntu 22.04/24.04, совместимо с iOS/macOS

set -e
exec > >(tee -a /var/log/privatestack_reality_install.log) 2>&1

log() { echo -e "\033[0;32m[+]\033[0m $1"; }
error() { echo -e "\033[0;31m[-]\033[0m $1"; exit 1; }

if [[ "$(id -u)" -ne 0 ]]; then error "Запускайте от root"; fi

if ! grep -q "Ubuntu" /etc/os-release || ! grep -q "24.04\|22.04" /etc/os-release; then
    error "Требуется Ubuntu 22.04 или 24.04"
fi

# === Зависимости ===
log "Установка пакетов..."
DEBIAN_FRONTEND=noninteractive apt-get update -qq
DEBIAN_FRONTEND=noninteractive apt-get install -y \
    curl git python3 python3-venv nginx-light ufw fail2ban \
    certbot python3-certbot-nginx jq qrencode

# === Swap ===
if ! swapon -s | grep -q "/swapfile"; then
    log "Создание swap (2 ГБ)..."
    fallocate -l 2G /swapfile
    chmod 600 /swapfile
    mkswap /swapfile
    swapon /swapfile
    echo '/swapfile none swap sw 0 0' >> /etc/fstab
fi

# === UFW + fail2ban ===
ufw --force reset
ufw default deny incoming
ufw default allow outgoing
ufw allow 22/tcp comment "SSH"
ufw allow 80/tcp comment "HTTP (LE + fallback)"
ufw allow 443/tcp comment "HTTPS (REALITY)"
ufw --force enable
systemctl enable --now fail2ban

# === Установка Xray ===
log "Установка Xray..."
bash -c "$(curl -L https://github.com/XTLS/Xray-install/raw/main/install-release.sh)" @ install

# === REALITY: генерация параметров ===
log "Генерация REALITY ключей..."
REALITY_OUTPUT=$(xray x25519 2>/dev/null)
PRIVATE_KEY=$(echo "$REALITY_OUTPUT" | grep "Private key:" | cut -d ' ' -f3)
PUBLIC_KEY=$(echo "$REALITY_OUTPUT" | grep "Public key:" | cut -d ' ' -f3)
UUID=$(xray uuid)
SHORT_ID=$(openssl rand -hex 4)  # 4 байта → 8 hex символов

DOMAIN="private-stack.site"
IP=$(curl -4s ifconfig.me)

# === Let's Encrypt для веб-заглушки (не для REALITY!) ===
log "Получение сертификата для $DOMAIN (fallback)..."
mkdir -p /var/www/html
echo "server { listen 80; server_name $DOMAIN; root /var/www/html; }" > /etc/nginx/sites-enabled/default
systemctl reload nginx
certbot certonly --webroot -w /var/www/html -d "$DOMAIN" --non-interactive --agree-tos --register-unsafely-without-email

# === Конфиг Xray REALITY (ИСПРАВЛЕННЫЙ) ===
mkdir -p /usr/local/etc/xray
cat > /usr/local/etc/xray/config.json <<EOF
{
  "log": { "loglevel": "warning" },
  "inbounds": [
    {
      "port": 443,
      "protocol": "vless",
      "settings": {
        "clients": [{ "id": "$UUID", "flow": "xtls-rprx-vision" }],
        "decryption": "none",
        "fallbacks": [
          { "alpn": "h2", "dest": 80 },
          { "dest": 80 }
        ]
      },
      "streamSettings": {
        "network": "tcp",
        "security": "reality",
        "realitySettings": {
          "show": false,
          "dest": "www.cloudflare.com:443",
          "xver": 0,
          "serverNames": ["www.cloudflare.com", "cloudflare.com"],
          "privateKey": "$PRIVATE_KEY",
          "publicKey": "$PUBLIC_KEY",
          "shortIds": ["$SHORT_ID"]
        }
      }
    }
  ],
  "outbounds": [{ "protocol": "freedom" }]
}
EOF

systemctl restart xray

# === SearXNG (локально на 127.0.0.1:8888) ===
log "Установка SearXNG..."
git clone https://github.com/searxng/searxng.git /opt/searxng
cd /opt/searxng
curl -LsSf https://astral.sh/uv/install.sh | sh
export PATH="/root/.cargo/bin:$PATH"
python3 -m venv venv
source venv/bin/activate
/root/.cargo/bin/uv pip install -r requirements.txt
cp utils/searx/settings.yml searxng/settings.yml
sed -i 's/json_output:.*/json_output: true/' searxng/settings.yml
sed -i 's|port:.*|port: 8888|' searxng/settings.yml
sed -i 's|bind_address:.*|bind_address: "127.0.0.1"|' searxng/settings.yml
cp utils/searx/systemd/searx.service /etc/systemd/system/
systemctl daemon-reload
systemctl enable --now searx

# === Nginx: fallback на 80 порт ===
cat > /etc/nginx/sites-available/default <<EOF
server {
    listen 80;
    server_name $DOMAIN;
    root /var/www/html;
    index index.html;
}
EOF
echo "<h1>Private Stack</h1>" > /var/www/html/index.html
systemctl reload nginx

# === Скрипт для получения ссылки ===
cat > /usr/local/bin/mainuser <<EOF
#!/bin/bash
UUID=\$(jq -r '.inbounds[0].settings.clients[0].id' /usr/local/etc/xray/config.json)
PUBKEY=\$(jq -r '.inbounds[0].streamSettings.realitySettings.publicKey' /usr/local/etc/xray/config.json)
SHORTID=\$(jq -r '.inbounds[0].streamSettings.realitySettings.shortIds[0]' /usr/local/etc/xray/config.json)
DOMAIN="private-stack.site"

# URL-кодирование публичного ключа
PUBKEY_ENCODED=\$(echo "\$PUBKEY" | sed 's/+/%2B/g; s/\//%2F/g')

LINK="vless://\$UUID@\$DOMAIN:443?encryption=none&security=reality&fp=chrome&pbk=\$PUBKEY_ENCODED&sid=\$SHORTID&sni=www.cloudflare.com&flow=xtls-rprx-vision&type=tcp#PrivateStack-REALITY"

echo "🔗 REALITY-ссылка:"
echo "\$LINK"
echo
echo "📱 QR-код:"
echo "\$LINK" | qrencode -t ansiutf8
EOF
chmod +x /usr/local/bin/mainuser

log "✅ Установка завершена!"
echo
echo "Выполните команду: mainuser"
echo "Поддерживаемые клиенты: Hiddify (рекомендуется), Shadowrocket (>=2.5), v2rayNG"
