#!/bin/bash

# sing-box-install — Trojan + REALITY + CZ.NIC DoH
# Полностью совместим с sing-box 1.11+

set -e

log() {
    echo "[$(date +'%Y-%m-%d %H:%M:%S')] $1"
}

# === 1. Обновление системы ===
log "Обновление системы..."
apt update && apt upgrade -y
apt install -y curl jq openssl qrencode ufw fail2ban net-tools

# === 2. UFW ===
log "Настройка UFW"
ufw --force reset
ufw default deny incoming
ufw default allow outgoing
ufw allow 22/tcp comment "SSH"
ufw allow 443/tcp comment "sing-box REALITY (TCP)"
ufw allow 443/udp comment "sing-box REALITY (UDP)"
ufw --force enable

# === 3. Установка sing-box ===
log "Установка sing-box"
SING_BOX_VERSION=$(curl -s https://api.github.com/repos/SagerNet/sing-box/releases/latest | jq -r .tag_name)
ARCH=$(uname -m)
case $ARCH in
    x86_64) ARCH_NAME="amd64" ;;
    aarch64|arm64) ARCH_NAME="arm64" ;;
    *) log "Архитектура $ARCH не поддерживается"; exit 1 ;;
esac

curl -L "https://github.com/SagerNet/sing-box/releases/download/${SING_BOX_VERSION}/sing-box-${SING_BOX_VERSION#v}-linux-${ARCH_NAME}.tar.gz" | tar xz -C /tmp
cp "/tmp/sing-box-${SING_BOX_VERSION#v}-linux-${ARCH_NAME}/sing-box" /usr/local/bin/sing-box
chmod +x /usr/local/bin/sing-box

# === 4. Генерация ключей REALITY ===
log "Генерация ключей REALITY"
KEY_OUTPUT=$(/usr/local/bin/sing-box generate reality-keypair)
PRIVATE_KEY=$(echo "$KEY_OUTPUT" | awk '/PrivateKey:/ {print $2}')
PUB_KEY=$(echo "$KEY_OUTPUT" | awk '/PublicKey:/ {print $2}')

if [[ -z "$PRIVATE_KEY" || -z "$PUB_KEY" ]]; then
    log "Ошибка: не удалось извлечь ключи"
    echo "Вывод:"
    echo "$KEY_OUTPUT"
    exit 1
fi

SID_VISION=$(openssl rand -hex 4)
SID_NONVISION=$(openssl rand -hex 4)
MAIN_PASSWORD=$(openssl rand -base64 32)
IP_ADDR=$(curl -4 -s --max-time 3 https://icanhazip.com || echo "SERVER_IP")

# Сохраняем параметры
KEYS_FILE="/etc/sing-box/.env"
mkdir -p /etc/sing-box
cat > "$KEYS_FILE" <<EOF
PRIVATE_KEY=$PRIVATE_KEY
PUBLIC_KEY=$PUB_KEY
SID_VISION=$SID_VISION
SID_NONVISION=$SID_NONVISION
PASSWORD=$MAIN_PASSWORD
IP_ADDR=$IP_ADDR
EOF
chmod 600 "$KEYS_FILE"

# === 5. Генерация конфига (новый синтаксис для ≥ v1.11) ===
log "Создание конфигурации sing-box"
CONFIG_FILE="/etc/sing-box/config.json"

jq -n \
  --arg pk "$PRIVATE_KEY" \
  --arg pubk "$PUB_KEY" \
  --arg sid_v "$SID_VISION" \
  --arg sid_nv "$SID_NONVISION" \
  --arg pwd "$MAIN_PASSWORD" \
'{
  "log": {
    "level": "warn",
    "output": "/var/log/sing-box.log"
  },
  "dns": {
    "servers": [
      {
        "tag": "doh-cznich",
        "address": "https://doh.nic.cz/dns-query",
        "detour": "direct"
      }
    ],
    "final": "doh-cznich",
    "independent_cache": true
  },
  "inbounds": [
    {
      "type": "trojan",
      "tag": "reality-vision-in",
      "listen": "0.0.0.0",
      "listen_port": 443,
      "sniff": true,
      "sniff_override_destination": true,
      "users": [{"name": "main", "password": $pwd}],
      "tls": {
        "enabled": true,
        "server_name": "icloud.com",
        "reality": {
          "enabled": true,
          "handshake": {"server": "icloud.com", "server_port": 443},
          "private_key": $pk,
          "short_id": [$sid_v]
        }
      },
      "transport": {"type": "tcp", "tcp": {"flow": "xtls-rprx-vision"}}
    },
    {
      "type": "trojan",
      "tag": "reality-nonvision-in",
      "listen": "0.0.0.0",
      "listen_port": 443,
      "sniff": true,
      "sniff_override_destination": true,
      "users": [{"name": "main", "password": $pwd}],
      "tls": {
        "enabled": true,
        "server_name": "mail.yourdomain.com",
        "reality": {
          "enabled": true,
          "handshake": {"server": "mail.yourdomain.com", "server_port": 443},
          "private_key": $pk,
          "short_id": [$sid_nv]
        }
      }
    }
  ],
  "outbounds": [
    {"type": "direct", "tag": "direct"},
    {"type": "block", "tag": "block"}
  ],
  "route": {
    "rules": [
      {"protocol": "dns", "action": "dns"}
    ],
    "final": "direct"
  }
}' > "$CONFIG_FILE"

# Проверка валидности
jq empty "$CONFIG_FILE" >/dev/null

# === 6. Systemd ===
log "Настройка systemd"
useradd --system --user-group --home-dir /etc/sing-box sing-box
chown -R sing-box:sing-box /etc/sing-box
chmod 600 "$CONFIG_FILE"

cat > /etc/systemd/system/sing-box.service <<EOF
[Unit]
Description=sing-box service
After=network.target

[Service]
User=sing-box
Group=sing-box
ExecStart=/usr/local/bin/sing-box run -c /etc/sing-box/config.json
Restart=on-failure
RestartSec=5
LimitNOFILE=65536

[Install]
WantedBy=multi-user.target
EOF

systemctl daemon-reload
systemctl enable --now sing-box

# === 7. Утилиты управления пользователями ===
cat > /usr/local/bin/userlist <<'EOF'
#!/bin/bash
source /etc/sing-box/.env
config="/etc/sing-box/config.json"
emails=($(jq -r '.inbounds[].users[].name' "$config" | sort -u))
if [[ ${#emails[@]} -eq 0 ]]; then
    echo "Список клиентов пуст"
    exit 1
fi
echo "Список клиентов:"
for i in "${!emails[@]}"; do
    echo "$((i+1)). ${emails[$i]}"
done
EOF
chmod +x /usr/local/bin/userlist

cat > /usr/local/bin/mainuser <<'EOF'
#!/bin/bash
source /etc/sing-box/.env
link="trojan://${PASSWORD}@${IP_ADDR}:443?security=reality&sni=icloud.com&fp=chrome&pbk=${PUBLIC_KEY}&sid=${SID_VISION}&type=tcp&flow=xtls-rprx-vision#Vision"
echo -e "\nСсылка для подключения (Vision):"
echo "$link"
echo -e "\nQR-код:"
echo "$link" | qrencode -t ansiutf8
EOF
chmod +x /usr/local/bin/mainuser

cat > /usr/local/bin/newuser <<'EOF'
#!/bin/bash
source /etc/sing-box/.env
read -p "Введите имя пользователя (email): " email
[[ -z "$email" || "$email" == *" "* ]] && { echo "Некорректное имя"; exit 1; }

config="/etc/sing-box/config.json"
if jq -e --arg e "$email" '.inbounds[].users[] | select(.name == $e)' "$config" >/dev/null; then
    echo "Пользователь уже существует"
    exit 1
fi

new_pass=$(openssl rand -base64 32)
tmp=$(mktemp)
jq --arg name "$email" --arg pass "$new_pass" '
  .inbounds |= map(.users += [{"name": $name, "password": $pass}])
' "$config" > "$tmp" && mv "$tmp" "$config"

systemctl reload sing-box

link="trojan://${new_pass}@${IP_ADDR}:443?security=reality&sni=icloud.com&fp=chrome&pbk=${PUBLIC_KEY}&sid=${SID_VISION}&type=tcp&flow=xtls-rprx-vision#$email"
echo -e "\nСсылка:"
echo "$link"
echo -e "\nQR-код:"
echo "$link" | qrencode -t ansiutf8
EOF
chmod +x /usr/local/bin/newuser

cat > /usr/local/bin/rmuser <<'EOF'
#!/bin/bash
source /etc/sing-box/.env
config="/etc/sing-box/config.json"
emails=($(jq -r '.inbounds[].users[].name' "$config" | sort -u))
[[ ${#emails[@]} -eq 0 ]] && { echo "Нет клиентов"; exit 1; }

for i in "${!emails[@]}"; do
    echo "$((i+1)). ${emails[$i]}"
done

read -p "Номер для удаления: " n
(( n >= 1 && n <= ${#emails[@]} )) || { echo "Неверный номер"; exit 1; }
user="${emails[$((n-1))]}"

tmp=$(mktemp)
jq --arg u "$user" '.inbounds |= map(.users |= map(select(.name != $u)))' "$config" > "$tmp" && mv "$tmp" "$config"
systemctl reload sing-box
echo "Удалён: $user"
EOF
chmod +x /usr/local/bin/rmuser

cat > /usr/local/bin/sharelink <<'EOF'
#!/bin/bash
source /etc/sing-box/.env
config="/etc/sing-box/config.json"
emails=($(jq -r '.inbounds[].users[].name' "$config" | sort -u))
[[ ${#emails[@]} -eq 0 ]] && { echo "Нет клиентов"; exit 1; }

for i in "${!emails[@]}"; do
    echo "$((i+1)). ${emails[$i]}"
done

read -p "Выберите: " n
(( n >= 1 && n <= ${#emails[@]} )) || { echo "Неверный номер"; exit 1; }
user="${emails[$((n-1))]}"
pass=$(jq --arg u "$user" -r '.inbounds[].users[] | select(.name == $u) | .password' "$config" | head -1)

link="trojan://${pass}@${IP_ADDR}:443?security=reality&sni=icloud.com&fp=chrome&pbk=${PUBLIC_KEY}&sid=${SID_VISION}&type=tcp&flow=xtls-rprx-vision#$user"
echo -e "\nСсылка:"
echo "$link"
echo -e "\nQR-код:"
echo "$link" | qrencode -t ansiutf8
EOF
chmod +x /usr/local/bin/sharelink

# === 8. Финал ===
log "sing-box успешно установлен"
/usr/local/bin/mainuser

cat > "$HOME/help" <<EOF
Команды:
  mainuser  - ссылка основного пользователя (Vision)
  newuser   - создать пользователя
  rmuser    - удалить пользователя
  sharelink - получить ссылку по имени
  userlist  - список пользователей

Конфиг: /etc/sing-box/config.json
Перезагрузка: systemctl reload sing-box
EOF

log "Инструкции: $HOME/help"
